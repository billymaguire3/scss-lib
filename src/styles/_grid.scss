@use "sass:math";
@use "./breakpoints.scss" as *;

$grid-columns: 12;
// map
$grid-gaps: (
  "0": 0,
  "1": 0.25rem,
  "2": 0.5rem,
  "3": 1rem,
);
// list
$layout-values: flex-start, center, flex-end, space-between, space-around;

// base layout classes
.container {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 1.5rem;
  box-sizing: border-box;
}

.row {
  display: flex;
  flex-flow: row wrap;
}

// grid gaps. Loop through a map
@each $key, $value in $grid-gaps {
  .gap-#{$key} > * {
    padding: $value;
  }

  .gap-#{$key} {
    margin-left: -$value;
    margin-right: -$value;
  }
}

// justify content classes. Loop through a list
@each $value in $layout-values {
  .justify-#{$value} {
    justify-content: $value;
  }
}

// col classes
@include xs {
  // col-1-xs, col-2-xs, col-3-xs, col-4-xs
  @for $i from 1 through $grid-columns {
    .col-#{$i}-xs {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include sm {
  // col-1-sm, col-2-sm, col-3-sm, col-4-sm
  @for $i from 1 through $grid-columns {
    .col-#{$i}-sm {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include md {
  // col-1-md, col-2-md, col-3-md, col-4-md
  @for $i from 1 through $grid-columns {
    .col-#{$i}-md {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include lg {
  // col-1-lg, col-2-lg, col-3-lg, col-4-lg
  @for $i from 1 through $grid-columns {
    .col-#{$i}-lg {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include xl {
  // col-1-xl, col-2-xl, col-3-xl, col-4-xl
  @for $i from 1 through $grid-columns {
    .col-#{$i}-xl {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}
