@use "sass:map";

// ============================================================================
// SCSS MIXINS WITH @content - BREAKPOINTS
// ============================================================================
// This file demonstrates the @content directive in SCSS mixins
//
// KEY CONCEPT:
// The @content directive is a placeholder that gets replaced with whatever
// styles you pass INTO the mixin when you call it.
//
// Think of it like this:
// - Mixin = A template with a blank space (@content)
// - When you @include the mixin, you fill in that blank space
//
// Example:
// @mixin md {
//   @media (min-width: 720px) {
//     @content;  ← Styles get injected here
//   }
// }
//
// @include md {
//   .my-class { color: blue; }  ← These styles fill @content
// }
//
// Result:
// @media (min-width: 720px) {
//   .my-class { color: blue; }
// }
// ============================================================================

$breakpoints: (
  "xs": 0,
  "sm": 480px,
  "md": 720px,
  "lg": 960px,
  "xl": 1200px,
);

// Breakpoint mixins - each uses @content to inject your styles
@mixin xs {
  @media (min-width: map.get($breakpoints, "xs")) {
    @content; // Your styles get placed here
  }
}

@mixin sm {
  @media (min-width: map.get($breakpoints, "sm")) {
    @content; // Your styles get placed here
  }
}

@mixin md {
  @media (min-width: map.get($breakpoints, "md")) {
    @content; // Your styles get placed here
  }
}

@mixin lg {
  @media (min-width: map.get($breakpoints, "lg")) {
    @content; // Your styles get placed here
  }
}

@mixin xl {
  @media (min-width: map.get($breakpoints, "xl")) {
    @content; // Your styles get placed here
  }
}

// breakpoint mixin
@mixin breakpoint($bp: 0) {
  @media (min-width: $bp) {
    @content;
  }
}

.responsive-test {
  @include xs {
    color: red;
  }
  @include sm {
    color: blue;
  }
  @include md {
    color: green;
  }
  @include lg {
    color: purple;
  }
  @include xl {
    color: orange;
  }
  @include breakpoint(1400px) {
    color: pink;
  }
}
